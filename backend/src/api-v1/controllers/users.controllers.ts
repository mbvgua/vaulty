import { Request,Response } from "express";
import mysql from 'mysql2/promise'
import {v4 as uid} from 'uuid'

import { sqlConfig } from "../../config";
import { sqlError } from "../models/db.models";
import { Users } from "../models/users.models";
import { registerSchema } from "../validators/users.validators";

const pool = mysql.createPool(sqlConfig)


export async function registerUser(request:Request,response:Response):Promise<Response>{
  /*
  * Registers new users into the system
  * id is auto-generated by uuid()
  * user input is validated and checked for errors
  * if none user is added to the system
  * if any error occurrs, user will not be added to system
  * appropriate response message and codes are sent back
  */

  const id = uid()
  const {username,email,phoneNumber,password} = request.body
  
  try {
    const {error} = registerSchema.validate(request.body)
    if (error) {
      return response.status(400).json(error)
    }
    const connection = await pool.getConnection()
    const [rows1,fields1] = await connection.query(
      `INSERT INTO users VALUES(
      '${id}',
      '${username}',
      '${email}',
      '${phoneNumber}',
      '${password}',
      DEFAULT,
      DEFAULT,
      0,
      0,
      0
      );`
    )  

    const [rows2,fields2] = await connection.query(
      `SELECT * FROM userBasicInfo
      WHERE id='${id}' AND isDeleted=0;`
    ) 
    
    const User = rows2 as Array<Users>
    connection.release()

    return response.status(200).json({message:`Congratulations ${User[0].username}! You have successfully been registered on the system.`})
    
  } catch (error:sqlError | any) {
    console.log(error)
    return response.status(500).json({error:`An error occurred: `+error.sqlMessage})
  }
}

